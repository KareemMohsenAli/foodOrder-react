{"ast":null,"code":"var _jsxFileName = \"/home/hp/ReactProjects/myapp/src/components/Chart/Chart.jsx\";\nimport React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart = props => {\n  const dataPointValues = props.dataPoints.map(dataPoint => {\n    console.log(props.value, 'kar');\n    if (typeof dataPoint.value !== 'string') {\n      return 0;\n    }\n    const valueWithoutDollarSign = dataPoint.value.replace('$', '');\n    return parseFloat(valueWithoutDollarSign);\n  });\n  const numericValues = dataPointValues.filter(value => !isNaN(value));\n  const totalMaximum = Math.max(...numericValues);\n\n  // const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  // console.log(dataPointValues)\n  // const totalMaximum = Math.max(...dataPointValues);\n  console.log(totalMaximum);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.dataPoints.map(dataPoint => /*#__PURE__*/_jsxDEV(ChartBar, {\n      value: dataPoint.value,\n      maxValue: totalMaximum,\n      label: dataPoint.label\n    }, dataPoint.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","ChartBar","jsxDEV","_jsxDEV","Chart","props","dataPointValues","dataPoints","map","dataPoint","console","log","value","valueWithoutDollarSign","replace","parseFloat","numericValues","filter","isNaN","totalMaximum","Math","max","className","children","maxValue","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hp/ReactProjects/myapp/src/components/Chart/Chart.jsx"],"sourcesContent":["import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map(dataPoint => {\n      console.log(props.value,'kar')\n\n    if (typeof dataPoint.value !== 'string') {\n      return 0;\n    }\n    const valueWithoutDollarSign = dataPoint.value.replace('$', '');\n    return parseFloat(valueWithoutDollarSign);\n  });\n  const numericValues = dataPointValues.filter(value => !isNaN(value));\n  const totalMaximum = Math.max(...numericValues);\n\n  // const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  // console.log(dataPointValues)\n  // const totalMaximum = Math.max(...dataPointValues);\n  console.log(totalMaximum)\n\n  return (\n    <div className='chart'>\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrB,MAAMC,KAAK,GAAIC,KAAK,IAAK;EACvB,MAAMC,eAAe,GAAGD,KAAK,CAACE,UAAU,CAACC,GAAG,CAACC,SAAS,IAAI;IACtDC,OAAO,CAACC,GAAG,CAACN,KAAK,CAACO,KAAK,EAAC,KAAK,CAAC;IAEhC,IAAI,OAAOH,SAAS,CAACG,KAAK,KAAK,QAAQ,EAAE;MACvC,OAAO,CAAC;IACV;IACA,MAAMC,sBAAsB,GAAGJ,SAAS,CAACG,KAAK,CAACE,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;IAC/D,OAAOC,UAAU,CAACF,sBAAsB,CAAC;EAC3C,CAAC,CAAC;EACF,MAAMG,aAAa,GAAGV,eAAe,CAACW,MAAM,CAACL,KAAK,IAAI,CAACM,KAAK,CAACN,KAAK,CAAC,CAAC;EACpE,MAAMO,YAAY,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGL,aAAa,CAAC;;EAE/C;EACA;EACA;EACAN,OAAO,CAACC,GAAG,CAACQ,YAAY,CAAC;EAEzB,oBACEhB,OAAA;IAAKmB,SAAS,EAAC,OAAO;IAAAC,QAAA,EACnBlB,KAAK,CAACE,UAAU,CAACC,GAAG,CAAEC,SAAS,iBAC9BN,OAAA,CAACF,QAAQ;MAEPW,KAAK,EAAEH,SAAS,CAACG,KAAM;MACvBY,QAAQ,EAAEL,YAAa;MACvBM,KAAK,EAAEhB,SAAS,CAACgB;IAAM,GAHlBhB,SAAS,CAACgB,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAKvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACC,EAAA,GA9BI1B,KAAK;AAgCX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}